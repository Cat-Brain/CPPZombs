#version 330 core
out vec4 FragColor;

in vec2 pos;
uniform vec2 center;
uniform ivec2 scrDim;
uniform sampler2D subScat;
uniform vec3 color;
uniform float range;

void main()
{
	vec2 disp = pos - center;
	float squistance = max(abs(disp.x), abs(disp.y));
	vec2 dir = disp / squistance;
	vec3 finalColor = color * (1 - squistance / range);
	for (int i = 1; i <= squistance; i++)
		finalColor -= texture(subScat, (center + 1 + dir * i) / scrDim * 0.5 + 0.5).rgb;
	FragColor = vec4(clamp(finalColor.r, 0.0, 1.0), clamp(finalColor.g, 0.0, 1.0), clamp(finalColor.b, 0.0, 1.0), 1);
} 