#version 330 core
layout (location = 0) in vec2 aPos;

uniform float rotation;
uniform vec2 scale;
uniform vec3 position;

uniform mat4 perspective;

out vec2 dir, pos;

void main()
{
	pos = vec2(aPos.x, 1. - aPos.y);
	float cosRotation = cos(rotation), sinRotation = sin(rotation);
	dir = vec2(sinRotation, cosRotation);
	vec2 pos;
	pos.x = aPos.x * cosRotation - aPos.y * sinRotation;
	pos.y = aPos.x * sinRotation + aPos.y * cosRotation;
	gl_Position = perspective * vec4(vec3(pos * scale, 0.) + position, 1.0);
} 