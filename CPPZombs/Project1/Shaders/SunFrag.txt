#version 330 core
out vec4 FragColor;

in vec2 screenPos;
uniform sampler2D normalMap;
uniform vec3 color, direction;
uniform bool colorBand;

float Mask(vec2 pos)
{
	return (sin(pos.x) + sin(pos.y)) * 0.25 + 0.5;
}

void main()
{
	vec3 normal = texture(normalMap, screenPos * 0.5 + 0.5).xyz;
	float diff = normal == vec3(0) ? 1 : dot(normal, -direction) * 0.5 + 0.5;
	if (colorBand) diff = 0.2 * round(diff * 5); // Round for color banding.
	//diff = diff < Mask(gl_FragCoord.xy) ? 0 : 1; // Stipple if the settings say to do so.
	FragColor = vec4(color * diff, 1.);
} 