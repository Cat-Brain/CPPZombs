#version 330 core
layout (location = 0) in vec3 aPos;

uniform mat4 camera, perspective;
uniform vec3 a, b;
uniform float thickness;
out vec3 tPos;

void main()
{
	vec3 weights = aPos * 0.5 + vec3(0.5);
	vec3 invWeights = vec3(1) - weights;
	vec3 offset = sign(b - a) * thickness;
	tPos = weights * (a - offset) + invWeights * (b + offset);
	gl_Position = perspective * camera * vec4(tPos, 1.0);
} 